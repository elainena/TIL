Day 2
<Javascript Data Type & Variable (자료형)>
- ASCII코드: 알파벳(대소문자), 숫자 (10), 특수문자 표현법
- 1byte= 8 bit
- 8(2^8) bit를 가지고있으면 아스키코드 (사람이 이해할수있는 문자들)를 표현할수있다.
- 정수는 8바이트
- 변수를 선언할때는 undefined로 지정해서 메모리를 확보하고, 값을 할당할때 메모리를 재정의한다.
- 변수는 위치(주소)를 기억하느느 저장소이다. 위치란 메모리 상의 주소(address)를 의미한다. 
    - 즉 젼수란 메모리 주소(Memory address)에 접근하기위해 사람이 이해할 수 있는 언어로 지정한 식별자(identifier)이다.

<Data Type (자료형)>
- 기본자료형:
    1. Boolean
        - True or False (논리값)
        - 두가지 값
        - 0은 false로 평가될수있고, 1은 true로 평가될수있다
        - 비어있는 문자열, null, undefined과, 숫자 0도 false로 여겨진다
    2. null(소문자)
        - 딱 한가지값만 가질수있다.
        - 무효의 의미가 강하다.
        - 메모리상에 가르키고있는 포인터를 지워서 참조를 무의미하게 한다.
        - 참조가 없어진 메모리 영역에 대해 가비지 콜렉션을 수행한다
    3. Undefined
        - 선언만 하고 할당하지 않은 상태에 갖고있는 값
    4. Number
        - 숫자
        - 무한대 infinite (+/-)
        - NaN: Not a Number 
    5. String***
        - 유니코드(16비트 부호없는 정수 값)를 지원한다
        - 홀따옴표, 쌍따옴표안에 텍스트 넣어 생성
        - 자바스크립트의 문자열은 변경불가능
    6. Symbol
        - 전체중에 유일하게 변경 불가능(immutable)한 자료형(primitive)다.
    7. Object
        - 유일하게 객체형이다
        
[기본자료형 (Primitive Data Type)]
- 데이터값를 변경할수 없고(Immutable Value) Pass-by-value(값으로 접근)이다.
- Immutable Value      
    - 변수의 값을 다시 바꿨을때, 원래있던 주소의 값이 변경되는게 아니고 새로운 주소에 바뀐 값이 다시 생성되고 그것을 가르키게 되는것이다.
- Pass-by-value***
    - var b=a 라고 하면, b에게 a의값을 복사해서 주는 개념. 
    - b와 a가 같은값의 주소를 share하는게 아니라 가르키는 주소는 다르지만 같은값을 갖는다는 뜻.

[객체형 (Object type, 참조형)]
- 객체는 데이터와 그 데이터에 관련되는 동작(절차,방법,기능)을 모두 포함할 수 있는 개념적 존재이다. 달리 말해, 이름과 값을 가지는 데이터를 의미하는 프로퍼티(property)와 동작을 의미하는 메소드(method)를 포함할 수 있는 독립적 주체이다.
- 기본자료형을 제외한 나머지값들은 모두 객체이다
- 기본자료형과 다르게 Pass-by-reference(참조로 접근)이고 Heap영역에 저장된다

